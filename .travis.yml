language: cpp
dist: trusty
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-5
      - g++-5
      - libboost-dev
      - libboost-date-time-dev
      - libboost-regex-dev
      - libboost-system-dev
      - libboost-filesystem-dev
      - build-essential
      - liblua5.1-0-dev
      - python-virtualenv
      - python-bottle
      - libgeoip-dev
      - geoip-database
      - cpanminus
      - libprotobuf-dev
      - protobuf-compiler
      - libhiredis-dev
      - libcurl4-openssl-dev
      - libyaml-cpp-dev
      - wget
jobs:
  include:
  - stage: "test"
    name: "GCC Regression"
    env:
      - COMPILER=gcc
      - BUILDER=true 
      - BUILDER_TARGET=
      - WFORCE_IMAGE=
  - name: "Clang Regression"
    env:
      - COMPILER=clang
      - BUILDER=true 
      - BUILDER_TARGET=
      - WFORCE_IMAGE=
  - name: "Test Wforce Docker Image"
    env:
      - COMPILER=none
      - BUILDER=true
      - BUILDER_TARGET=
      - WFORCE_IMAGE=test_wforce_image
  - stage: "build"
    name: "Package Centos-7"
    env:
      - COMPILER=none
      - BUILDER=./builder/build.sh
      - BUILDER_TARGET=centos-7
      - WFORCE_IMAGE=
  - stage: "build"
    name: "Package Centos-8"
    env:
      - COMPILER=none
      - BUILDER=./builder/build.sh
      - BUILDER_TARGET=centos-8
      - WFORCE_IMAGE=
  - stage: "build"
    name: "Package Amazon Linux 2"
    env:
      - COMPILER=none
      - BUILDER=./builder/build.sh
      - BUILDER_TARGET=amazon-2
      - WFORCE_IMAGE=
  - name: "Package Debian-stretch"
    env:
      - COMPILER=none
      - BUILDER=./builder/build.sh
      - BUILDER_TARGET=debian-stretch
      - WFORCE_IMAGE=
  - name: "Package Debian-buster"
    env:
      - COMPILER=none
      - BUILDER=./builder/build.sh
      - BUILDER_TARGET=debian-buster
      - WFORCE_IMAGE=
  - stage: deploy
    name: "Deploy Wforce Docker Image"
    script:
      - autoreconf -i
      - ./configure --enable-docker --disable-dns --disable-sodium --disable-geoip
      - cd docker/wforce_image
      - make build_wforce_image
      - cd ..
      - bash docker_push.sh
      - cd ..
stages:
  - build
  - test
  - name: deploy
    if: branch = master AND env(DOCKER_USERNAME) IS present AND env(DOCKER_PASSWORD) IS present
before_script:
 - git clone https://github.com/jupp0r/prometheus-cpp.git
 - ( cd prometheus-cpp && git checkout tags/v0.9.0 -b v0.9.0 )
 - (cd prometheus-cpp && git submodule init && git submodule update && mkdir _build && cd _build && cmake .. -DBUILD_SHARED_LIBS=off -DENABLE_PULL=off -DENABLE_PUSH=off -DENABLE_COMPRESSION=off && make && sudo make install)
script:
 - autoreconf -i
 - ./configure --enable-docker --disable-dns --disable-sodium --disable-geoip
 - cd docker
 - make regression-$COMPILER
 - cd wforce_image
 - make $WFORCE_IMAGE
 - cd ../..
 - $BUILDER $BUILDER_TARGET
