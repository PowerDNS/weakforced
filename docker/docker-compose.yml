version: '2'
services:
  logstash:
    build: logstash
    ports:
      - "4501:4501/udp"
      - "8080:8080/tcp"
    command: -f /etc/logstash/conf.d/
    volumes:
      - ./logstash/config:/etc/logstash/conf.d
      - ./logstash/templates:/tmp/templates
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
  elasticsearch:
    build: elasticsearch
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
  regression:
    cap_add:
      - ALL
    security_opt:
      - seccomp=unconfined
    build:
      context: weakforced
      dockerfile: docker/regression/Dockerfile
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
    links:
      - elasticsearch
      - logstash
    depends_on:
      - elasticsearch
      - logstash
      - kafka-rest

  # The following three images are for kafka regression testing
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-rest:
    image: confluentinc/cp-kafka-rest:latest
    ports:
      - 8082:8082
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_HOST_NAME: localhost
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - zookeeper
      - kafka

volumes:
  esdata:
    driver: local
